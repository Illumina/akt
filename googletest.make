# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ./googletest/

# Where to find user code.
USER_DIR = ./googletest/samples/

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -O2 -pthread -lz -lm -mpopcnt

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = test_akt

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^


## akt build stuff starts here

HTSDIR=htslib-1.6
include $(HTSDIR)/htslib.mk
HTSLIB = $(HTSDIR)/libhts.a
IFLAGS = -I$(HTSDIR)  -I./

OBJS= utils.o pedphase.o family.o reader.o vcfpca.o relatives.o kin.o pedigree.o  unrelated.o cluster.o
.cpp.o:
	$(CXX) $(CXXFLAGS) $(IFLAGS) -c -o $@ $<
.c.o:
	$(CC) $(CXXFLAGS) -c -o $@ $<

##akt code
cluster.o: cluster.cpp cluster.hpp
family.o: family.cpp family.hpp
relatives.o: relatives.cpp 
unrelated.o: unrelated.cpp 
vcfpca.o: vcfpca.cpp RandomSVD.hpp
kin.o: kin.cpp 
pedigree.o: pedigree.cpp pedigree.h
reader.o: reader.cpp 
pedphase.o: pedphase.cpp pedphase.h utils.h
utils.o: utils.cpp utils.h

test_akt : test_akt.cpp gtest_main.a $(OBJS) $(HTSLIB)
	$(CXX) $(IFLAGS)  $^ -o $@  $(CPPFLAGS) $(CXXFLAGS) 
